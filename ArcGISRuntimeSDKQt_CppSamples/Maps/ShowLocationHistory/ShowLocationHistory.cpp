// [WriteFile Name=ShowLocationHistory, Category=Maps]
// [Legal]
// Copyright 2020 Esri.

// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
// http://www.apache.org/licenses/LICENSE-2.0

// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
// [Legal]

#ifdef PCH_BUILD
#include "pch.hpp"
#endif // PCH_BUILD

#include "ShowLocationHistory.h"

#include "GeometryEngine.h"
#include "Graphic.h"
#include "GraphicsOverlay.h"
#include "Location.h"
#include "Map.h"
#include "MapQuickView.h"
#include "Polyline.h"
#include "PolylineBuilder.h"
#include "SimpleLineSymbol.h"
#include "SimpleMarkerSymbol.h"
#include "SimpleRenderer.h"
#include "SimulatedLocationDataSource.h"

using namespace Esri::ArcGISRuntime;

namespace
{
constexpr int initialZoomScale = 10000;
const QList<Point> polylinePoints = {Point(-13011809.657491295,4039640.7880717744), Point(-13011701.568936104,4039568.214327574), Point(-13011421.31075371,4039507.9935611095), Point(-13011391.20037048,4039491.7802778305), Point(-13011322.48693183,4039583.6555497493), Point(-13011388.112126058,4039654.6851717336), Point(-13011265.354409827,4039800.6047212547), Point(-13011536.347858932,4039929.538926385), Point(-13011405.869531592,4039975.0905317874), Point(-13011511.64190346,4040024.5024427325), Point(-13011580.355342126,4040222.922147628), Point(-13011617.41427536,4040253.8045919817), Point(-13011693.848325104,4040314.7974195546), Point(-13011672.230614064,4040421.34185253), Point(-13011601.973053196,4040524.0259799687), Point(-13011473.038848072,4040617.4453740995), Point(-13011448.332892604,4040677.6661405656), Point(-13011085.464171614,4040778.0340846847), Point(-13011008.644091325,4040786.5267568757), Point(-13010914.066605529,4040714.33904322), Point(-13010878.551794538,4040668.7874378175), Point(-13010901.713627798,4040578.842318671), Point(-13010841.492861336,4040506.26857447), Point(-13010744.985222775,4040495.845749503), Point(-13010631.878270378,4040525.570102181), Point(-13010530.738265174,4040506.2685744683), Point(-13010471.675590372,4040511.673002228), Point(-13010404.120243387,4040502.0222383724), Point(-13010377.870165698,4040481.562618997), Point(-13010338.109018607,4040449.1360524357), Point(-13010296.417718746,4040452.9963579783), Point(-13010186.399010794,4040458.4007857386), Point(-13010165.93939142,4040437.555135809), Point(-13010145.8658026,4040355.716658303), Point(-13010047.041980708,4040325.9923056248), Point(-13009887.997392362,4040215.973597658), Point(-13009856.728917466,4040206.708864356), Point(-13009799.596395437,4040182.3889394375), Point(-13009759.06318724,4040163.0874117245), Point(-13009630.515012672,4040113.675500777), Point(-13009579.945010064,4040118.6938979826), Point(-13009559.099360134,4040139.539547913), Point(-13009545.202260181,4040156.910922854), Point(-13009479.57706596,4040170.0359616987), Point(-13009379.98118296,4040178.5286338925), Point(-13009347.940646958,4040115.605653548), Point(-13009292.352247145,4040113.6755007734), Point(-13009219.006441835,4040110.201225785), Point(-13009176.157050319,4040096.3041258287), Point(-13009119.796589399,4040048.050306544), Point(-13009051.083150743,4040002.884731692), Point(-13009010.549942547,4039973.160379014), Point(-13008956.119634403,4039956.947095732), Point(-13008899.373142926,4039943.8220568877), Point(-13008784.722068312,4039914.4837347637), Point(-13008758.47199062,4039911.0094597754), Point(-13008750.751379536,4039926.8367125), Point(-13008759.24405173,4039946.138240213), Point(-13008783.56397665,4039966.983890143), Point(-13008806.339779349,4039983.9692345303), Point(-13008907.865815122,4040036.855420462), Point(-13008951.487267753,4040057.701070392), Point(-13009000.51314815,4040114.0615313114), Point(-13009007.075667573,4040126.8005396016), Point(-13009019.814675866,4040175.8264199905), Point(-13008992.020475958,4040257.6648974894), Point(-13008973.104978798,4040289.3194029387), Point(-13008942.994595567,4040359.576963814), Point(-13008898.987112386,4040408.6028442015), Point(-13008774.299243363,4040423.27200526), Point(-13008715.23656856,4040428.2904024655), Point(-13008695.162979739,4040427.904371911), Point(-13008815.218482114,4040342.59161942), Point(-13008866.946576392,4040219.061842053), Point(-13008852.663445884,4040202.4625282204), Point(-13008837.608254269,4040192.4257338094), Point(-13008697.865193628,4040193.969856023), Point(-13008627.800648032,4040176.9845116343), Point(-13008505.042931776,4040134.135120112), Point(-13008483.039190184,4040132.977028449), Point(-13008528.97682614,4040171.9661144293), Point(-13008568.351942675,4040205.1647420954), Point(-13008587.653470388,4040222.922147591), Point(-13008611.973395307,4040251.102378052), Point(-13008611.973395307,4040258.0509280288), Point(-13008443.278043106,4040311.7091750614), Point(-13008395.410254383,4040447.977960711), Point(-13008330.557121268,4040546.4157520416), Point(-13008249.876735426,4040666.8572849683), Point(-13008251.420857644,4040613.971099035), Point(-13008301.218799148,4040460.3309384375), Point(-13008282.303301992,4040330.624672201), Point(-13008179.23314401,4040199.37428375), Point(-13008036.40183894,4040226.7824531), Point(-13008000.11496684,4040224.8523003287), Point(-13007968.460461391,4040217.903750352), Point(-13007911.327939363,4040152.2785561234), Point(-13007804.783506392,4040188.9514587754), Point(-13007751.511289904,4040218.289780899), Point(-13007710.2060206,4040246.0839808057), Point(-13007693.220676212,4040258.436958542), Point(-13007634.54403197,4040249.9442863483), Point(-13007608.679984834,4040244.539858589), Point(-13007585.132121025,4040242.223675263), Point(-13007558.109982226,4040240.6795530464), Point(-13007505.995857403,4040236.047186395), Point(-13007482.834024148,4040244.1538280346), Point(-13007460.830282556,4040264.613447404), Point(-13007452.723640917,4040303.6025333838), Point(-13007423.771349348,4040337.573222159), Point(-13007402.925699417,4040342.2055888097), Point(-13007389.800660573,4040347.6100165695), Point(-13007336.142413529,4040404.356508044), Point(-13007290.590808127,4040391.6174997534), Point(-13007272.447372077,4040321.745969433), Point(-13007314.138671933,4040238.363369706), Point(-13007231.528133322,4040312.0952055696), Point(-13007207.594238957,4040409.7609357936), Point(-13007180.186069606,4040449.908113437), Point(-13007177.483855726,4040397.4079580577), Point(-13007127.685914226,4040489.6692605256), Point(-13007139.652861413,4040315.1834499966), Point(-13007031.564306224,4040541.39735479), Point(-13007057.042322807,4040339.117344355), Point(-13007011.490717405,4040449.52208287), Point(-13006952.428042606,4040544.4855992175), Point(-13006995.277434127,4040379.2645219946), Point(-13006946.637584293,4040226.7824530574), Point(-13006908.806589976,4040240.2935224567), Point(-13006901.472009445,4040303.2165028006), Point(-13006867.501320671,4040238.363369685), Point(-13006879.854298407,4040164.245503266), Point(-13006821.563684715,4040195.1279476066), Point(-13006794.541545916,4040224.8523002844), Point(-13006779.4863543,4040166.5616865917), Point(-13006688.769174052,4040199.374283703), Point(-13006678.732379641,4040249.5582557567), Point(-13006600.75420769,4040344.5217721006), Point(-13006478.768552545,4040397.4079580316), Point(-13006460.625116494,4040465.3493355783), Point(-13006471.433972025,4040525.956132594), Point(-13006449.044199886,4040656.0484293764), Point(-13006472.592063695,4040680.7543848488), Point(-13006468.345727604,4040742.133242973), Point(-13006504.246569151,4040809.302559414), Point(-13006465.643513724,4040807.372406643), Point(-13006454.44862765,4040841.7291259686), Point(-13006497.298019174,4040861.416684236), Point(-13006470.66191093,4040884.9645480453), Point(-13006528.952524621,4040927.0418784595), Point(-13006488.805346979,4040929.7440923396), Point(-13006467.187635941,4040970.6633310863), Point(-13006510.809088573,4040986.1045532566), Point(-13006483.400919221,4041011.1965392837), Point(-13006509.26496636,4041093.4210473364), Point(-13006495.367866406,4041110.0203611697), Point(-13006503.474508055,4041175.6455553896), Point(-13006600.754207738,4041320.4070132314), Point(-13006637.813140953,4041406.8778573833), Point(-13006633.566804856,4041479.8376321383), Point(-13006606.158635503,4041526.9333597533), Point(-13006582.224741139,4041544.6907652495), Point(-13006537.05916629,4041570.554812385), Point(-13006571.801916175,4041578.6614540224), Point(-13006598.051993866,4041633.4777927273), Point(-13006550.57023569,4041631.161609402), Point(-13006480.69870537,4041677.871306458), Point(-13006382.26091403,4041783.2576477686), Point(-13006354.466714123,4041873.588797465), Point(-13006273.014267175,4041992.872238723), Point(-13006138.675634298,4042124.1226271675), Point(-13006090.421815023,4042234.527365678), Point(-13006031.359140223,4042273.9024822125), Point(-13005898.178598998,4042420.98012338), Point(-13005806.689357642,4042428.314703906), Point(-13005670.420571996,4042393.957984575), Point(-13005583.177666733,4042405.924931757), Point(-13005500.567128133,4042402.064626215), Point(-13005475.475142105,4042385.8513429365), Point(-13005446.522850536,4042364.2336318977), Point(-13005417.570558969,4042337.2114930963), Point(-13005398.269031256,4042312.891568178), Point(-13005336.504142575,4042238.3876712057), Point(-13005192.514745843,4042221.0162962615), Point(-13005034.628249153,4042147.6704909513), Point(-13004884.076332992,4042148.8285826137)};
}

ShowLocationHistory::ShowLocationHistory(QObject* parent /* = nullptr */):
  QObject(parent),
  m_map(new Map(Basemap::darkGrayCanvasVector(this), this)),
  m_locationHistoryOverlay(new GraphicsOverlay(this)),
  m_locationHistoryLineOverlay(new GraphicsOverlay(this))
{
  // graphics overlay for displaying the trail
  SimpleLineSymbol* locationLineSymbol = new SimpleLineSymbol(SimpleLineSymbolStyle::Solid, Qt::green, 2, this);
  m_locationHistoryLineOverlay->setRenderer(new SimpleRenderer(locationLineSymbol, this));
  m_locationHistoryLineGraphic = new Graphic(this);
  m_locationHistoryLineOverlay->graphics()->append(m_locationHistoryLineGraphic);

  // graphics overlay for showing points
  SimpleMarkerSymbol* locationPointSymbol = new SimpleMarkerSymbol(SimpleMarkerSymbolStyle::Circle, Qt::red, 3, this);
  m_locationHistoryOverlay->setRenderer(new SimpleRenderer(locationPointSymbol, this));

  m_polylineBuilder = new PolylineBuilder(SpatialReference::webMercator(), this);
}

void ShowLocationHistory::handleLocationChanges()
{
  m_simulatedLocationDataSource = new SimulatedLocationDataSource(this);

  PolylineBuilder polylineBuilder(SpatialReference::webMercator());
  polylineBuilder.addPoints(polylinePoints);

  m_simulatedLocationDataSource->setLocationsWithPolyline(GeometryEngine::densify(polylineBuilder.toPolyline(), 10));
  m_simulatedLocationDataSource->start();

  m_mapView->locationDisplay()->setDataSource(m_simulatedLocationDataSource);
  m_mapView->locationDisplay()->setAutoPanMode(LocationDisplayAutoPanMode::Recenter);
  m_mapView->locationDisplay()->setInitialZoomScale(initialZoomScale);

  // if tracking is enabled then show location history
  connect(m_mapView->locationDisplay(), &LocationDisplay::locationChanged, this, [this](const Location& location)
  {
    if (!m_trackingEnabled)
    {
      return;
    }

    // clear old route
    m_locationHistoryLineGraphic->setGeometry(Geometry());

    if (m_lastPosition.isValid())
    {
      m_polylineBuilder->addPoint(m_lastPosition);
      m_locationHistoryOverlay->graphics()->append(new Graphic(m_lastPosition, this));
    }

    // store the current position
    m_lastPosition = location.position();

    // update the polyline
    m_locationHistoryLineGraphic->setGeometry(m_polylineBuilder->toGeometry());
  });
}

ShowLocationHistory::~ShowLocationHistory() = default;

void ShowLocationHistory::init()
{
  // Register the map view for QML
  qmlRegisterType<MapQuickView>("Esri.Samples", 1, 0, "MapView");
  qmlRegisterType<ShowLocationHistory>("Esri.Samples", 1, 0, "ShowLocationHistorySample");
}

MapQuickView* ShowLocationHistory::mapView() const
{
  return m_mapView;
}

// Set the view (created in QML)
void ShowLocationHistory::setMapView(MapQuickView* mapView)
{
  if (!mapView || mapView == m_mapView)
    return;

  m_mapView = mapView;
  m_mapView->setMap(m_map);

  m_mapView->graphicsOverlays()->append(m_locationHistoryLineOverlay);
  m_mapView->graphicsOverlays()->append(m_locationHistoryOverlay);

  handleLocationChanges();

  emit mapViewChanged();
}
